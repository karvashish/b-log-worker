name: Build and Push with Versioning

on:
  push:
    branches:
      - master


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Get last version
        id: get_version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "last_tag=$LAST_TAG" >> $GITHUB_ENV

      - name: Bump version based on commit message
        id: bump_version
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.last_tag }}"

          if [[ "$COMMIT_MSG" == *"[breaking]"* ]]; then
            MAJOR=$((MAJOR+1))
            MINOR=0
            PATCH=0
          elif [[ "$COMMIT_MSG" == *"[feature]"* ]]; then
            MINOR=$((MINOR+1))
            PATCH=0
          else
            PATCH=$((PATCH+1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Create and push git tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/b-log-worker:latest
            ${{ secrets.DOCKER_USERNAME }}/b-log-worker:${{ env.new_version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.new_version }}
          name: "Release ${{ env.new_version }}"
          body: |
            Docker image: `docker pull ${{ secrets.DOCKER_USERNAME }}/b-log-worker:${{ env.new_version }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
